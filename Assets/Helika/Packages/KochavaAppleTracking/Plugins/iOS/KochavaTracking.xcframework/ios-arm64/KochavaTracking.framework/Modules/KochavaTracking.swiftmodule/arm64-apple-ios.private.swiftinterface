// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name KochavaTracking
import AdSupport
import Foundation
import JavaScriptCore
import KochavaNetworking
@_exported import KochavaTracking
import OSLog
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public var shared: KochavaNetworking.Product {
  get
}
extension KochavaTracking.Tracking {
  @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(KVATracking_Datapoints) final public class Datapoints : ObjectiveC.NSObject, KochavaNetworking.ConfigurableWith, KochavaNetworking.DecodableFrom, KochavaNetworking.DecodableFromWithInitializedObject, KochavaNetworking.EncodableTo, KochavaNetworking.Executor, KochavaNetworking.Invalidatable, KochavaNetworking.Keyable, KochavaNetworking.Logger_Provider {
    public static func from(_ object: Any?) -> Self?
    @discardableResult
    public static func from(_ object: Any?, initializedObject: Any?) -> Self?
    final public func to(context: KochavaNetworking.Context?) -> Any?
    final public func configure(with object: Any?, context: KochavaNetworking.Context?)
    @available(iOS 14.0, iOSApplicationExtension 14.0, macOS 11.0, tvOS 14.0, tvOSApplicationExtension 14.0, visionOS 1.0, watchOS 7.0, *)
    public static let logger: os.Logger
    final public func key(context: KochavaNetworking.Context?) -> Swift.AnyHashable?
    public static let type_kochava: KochavaNetworking.Kochava_Type
    final public var execution: KochavaNetworking.Execution {
      get
    }
    final public func invalidate()
    final public var deviceLimitAdTrackingBoolAdapter: KochavaNetworking.Adapter {
      get
    }
    final public func idfaString() -> Swift.String?
    final public var idfaStringAdapter: KochavaNetworking.Adapter {
      get
    }
    @objc deinit
  }
}
@_hasMissingDesignatedInitializers @objc(KVATracking) final public class Tracking : ObjectiveC.NSObject, KochavaNetworking.ConfigurableWith, KochavaNetworking.ConfigurableWithWithOptions, KochavaNetworking.DecodableFrom, KochavaNetworking.DecodableFromWithInitializedObject, KochavaNetworking.EncodableTo, KochavaNetworking.Executor, KochavaNetworking.Invalidatable, KochavaNetworking.InvalidatableWithOptions, KochavaNetworking.Logger_Provider, KochavaNetworking.Networking_RequiredProvider, KochavaNetworking.SharedInstanceProvider, KochavaNetworking.Startable, KochavaNetworking.StartableWithOptions, KochavaNetworking.Stoppable, KochavaNetworking.StoppableWithOptions {
  @objc public static var shared: KochavaTracking.Tracking {
    @objc get
  }
  @objc public static var shared_optional: KochavaTracking.Tracking? {
    @objc get
  }
  @objc public static var sharedInstance: Any {
    @objc get
  }
  @objc(initWithStorageIdentifier:) convenience public init(storageIdentifier: KochavaNetworking.Networking.StorageIdentifier? = nil)
  @objc deinit
  public static func from(_ object: Any?) -> Self?
  @discardableResult
  public static func from(_ object: Any?, initializedObject: Any?) -> Self?
  final public func to(context: KochavaNetworking.Context?) -> Any?
  @objc(configureWith:context:) final public func configure(with object: Any?, context: KochavaNetworking.Context?)
  @objc final public func configure(with object: Any?, context: KochavaNetworking.Context?, logMessagePrintBool: Swift.Bool, asyncBool: Swift.Bool)
  @objc final public func start()
  @objc final public func start(logMessagePrintBool: Swift.Bool, asyncBool: Swift.Bool)
  @objc final public func stop()
  @objc final public func stop(logMessagePrintBool: Swift.Bool, asyncBool: Swift.Bool)
  @available(iOS 14.0, iOSApplicationExtension 14.0, macOS 11.0, tvOS 14.0, tvOSApplicationExtension 14.0, visionOS 1.0, watchOS 7.0, *)
  public static let logger: os.Logger
  @objc override final public var description: Swift.String {
    @objc get
  }
  public static let type_kochava: KochavaNetworking.Kochava_Type
  final public var execution: KochavaNetworking.Execution {
    get
  }
  @objc final public func invalidate()
  @objc final public func invalidate(logMessagePrintBool: Swift.Bool, asyncBool: Swift.Bool)
  final public var datapoints: KochavaTracking.Tracking.Datapoints {
    get
  }
  @objc final public var general: KochavaTracking.Tracking.General {
    @objc get
  }
  @objc final public var networking: KochavaNetworking.Networking {
    @objc get
  }
  @objc public static var sharedNetworkingLinkAutomaticallyBool: Swift.Bool {
    @objc get
    @objc set(sharedNetworkingLinkAutomaticallyBool)
  }
  @objc public static var sharedStorageIdentifier: KochavaNetworking.Networking.StorageIdentifier? {
    @objc get
    @objc set(sharedStorageIdentifier)
  }
}
extension KochavaTracking.Tracking : JavaScriptCore.JSExport {
}
@_inheritsConvenienceInitializers @objc(KochavaTracking_Product) final public class Product : ObjectiveC.NSObject, KochavaNetworking.Logger_Provider, KochavaNetworking.SharedInstanceProvider {
  @objc public static var shared: KochavaNetworking.Product {
    @objc get
  }
  public static var sharedInstance: Any {
    get
  }
  @available(iOS 14.0, iOSApplicationExtension 14.0, macOS 11.0, tvOS 14.0, tvOSApplicationExtension 14.0, visionOS 1.0, watchOS 7.0, *)
  public static let logger: os.Logger
  @objc override dynamic public init()
  @objc deinit
}
extension KochavaTracking.Tracking {
  @_hasMissingDesignatedInitializers @objc(KVATracking_General) final public class General : ObjectiveC.NSObject, KochavaNetworking.ConfigurableWith, KochavaNetworking.DecodableFrom, KochavaNetworking.DecodableFromWithInitializedObject, KochavaNetworking.EncodableTo, KochavaNetworking.Executor, KochavaNetworking.Invalidatable, KochavaNetworking.Keyable, KochavaNetworking.Logger_Provider, KochavaNetworking.Startable {
    public static func from(_ object: Any?) -> Self?
    @discardableResult
    public static func from(_ object: Any?, initializedObject: Any?) -> Self?
    final public func to(context: KochavaNetworking.Context?) -> Any?
    final public func configure(with object: Any?, context: KochavaNetworking.Context?)
    final public func start()
    @available(iOS 14.0, iOSApplicationExtension 14.0, macOS 11.0, tvOS 14.0, tvOSApplicationExtension 14.0, visionOS 1.0, watchOS 7.0, *)
    public static let logger: os.Logger
    final public func key(context: KochavaNetworking.Context?) -> Swift.AnyHashable?
    public static let type_kochava: KochavaNetworking.Kochava_Type
    final public var execution: KochavaNetworking.Execution {
      get
    }
    final public func invalidate()
    final public var controlDomainStringAdapter: KochavaNetworking.Adapter {
      get
    }
    final public var storageIdentifierAdapter: KochavaNetworking.Adapter {
      get
    }
    final public let instanceCreatedDate: Foundation.Date
    @objc deinit
  }
}
